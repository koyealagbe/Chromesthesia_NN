import numpy as np

def ReLU(x):
  return np.maximum(0,x)

def predict(x,W,b):
  l = len(W)-1
  z = []
  a = []
  x = x.reshape(3,1)
  z.append(W[0]@x + b[0])
  for j in range(l):
    a.append(ReLU(z[j]))
    z.append(W[j+1]@a[j] + b[j+1])
  yHat = 1/(1+np.exp(-z[l]))
  return yHat

def predictWhite(x):
  W1 = np.array([
    [0.45632591, 0.70884805, -0.28719771],
    [0.22282479, 0.28430997, -0.30527528],
    [1.43194318, -1.05723104, 2.42393373],
    [-1.18503064, 0.76570094, -0.53519412],
    [1.74080645, 3.09090047, -0.5594188 ],
    [0.17709346, 0.47322067, 0.03667475],
    [1.13757544, 0.09984624, -0.08165267],
    [0.2698265, 0.30542408, 0.12198608],
    [0.61546855, 0.82670793, -0.28820763],
    [2.57172891, 0.40125701, -0.35657177]
  ])
  b1 = np.array([
    [4.06225582e-01],
    [4.07272530e-04],
    [-1.38148921e+00],
    [2.04317291e+00],
    [-2.52161372e+00],
    [5.63231769e-01],
    [-2.89806641e-01],
    [3.88759717e-01],
    [4.66296614e-01],
    [-6.43523353e-01]
  ])
  W2 = np.array([
    [-0.04043234, 0.24958733, -0.45403976, 0.68863736, 1.06896724, -0.01194236, 0.36395897, 0.17075817, -0.13140066, 0.72617637],
    [0.57819445, 0.38358303, 0.35359067, 0.21650521, -0.87935558, 0.30709625, 0.42075367, 0.2511759, 0.28163407, -0.03607849],
    [-0.03601107, 0.39027489, -0.82048083, 0.67118718, 1.13731635, -0.08655674, 0.35071575, -0.10147323, 0.17313632, 0.80430953],
    [-0.04633875, 0.15711857, 0.05987027, 0.26930217, -0.00788327, 0.13112929, 0.27767489, 0.08563153, 0.29248828, 0.25212824],
    [0.33117299, 0.16399566, -1.12320881, 1.13590274, 1.34319488, -0.10141102, 0.56317362, -0.08464461, 0.18945318, 1.01712808],
    [0.49436073, 0.24292883, 0.87913689, -0.34600596, -1.35362293, 0.51327049, -0.03012856, 0.52390839, 0.44054916, -0.41355741],
    [-0.02095457, 0.45894789, -0.41970738, 0.55571315, 0.67642642, -0.03244736, 0.42002487, 0.07263605, -0.12140549, 0.53247752],
    [0.27548216, 0.27674233, 0.79014002, 0.20550631, -0.95206999, 0.38760391, -0.05387393, 0.4968006, 0.51121886, 0.17234492],
    [0.16093978, 0.04088845, 0.67174965, 0.00280978, -1.12232604, 0.41311103, 0.16040245, 0.49630196, 0.41623344, -0.49816955],
    [-0.06472911, 0.05999273, -0.74993988, 0.59841997, 1.25885736, 0.07340197, 0.27245376, 0.12134906, -0.09487846, 0.50249346]
  ])
  b2 = np.array([
    [-0.81303967],
    [-0.37480782],
    [-0.87656032],
    [-0.05846792],
    [-1.24854561],
    [0.8184966],
    [-0.57544104],
    [-0.35576597],
    [0.77118203],
    [-0.7371656]
  ])
  W3 = np.array([
    [0.76165542, 0.24151352, 0.82287164, 0.07145276, 1.15929841, -0.36884828, 0.75988901, -0.10124541, -0.01006438, 0.86391938],
    [-0.05350446, 0.2511078, -0.29055897, 0.06657212, -0.40881661, 0.40468611, -0.11249935, 0.50585736, 0.55562331, -0.25602215],
    [-0.55354987, 0.82920497, -0.37301373, 0.12803574, -0.73802211, 1.06431534, -0.32744778, 0.66602601, 1.06229742, -0.14925364],
    [0.33455278, 0.08744369, 0.54081722, 0.3768765, 0.42975752, -0.2660497, 0.2098903, 0.03428517, 0.0496298, 0.49239949],
    [0.02080419, 0.45890527, 0.1611419, 0.1001247, 0.11021966, 0.3108222, 0.20664953, 0.12137552, -0.03142117, 0.05338716],
    [0.14455317, 0.13303508, 0.22424542, -0.03256675, -0.03381397, 0.35970022, -0.01568264, 0.30556252, 0.19597826, 0.27068939],
    [0.68635095, -0.37228602, 0.92933216, 0.39361095, 1.22059385, -0.23852471, 0.41661675, -0.31530177, -0.27168824, 1.12487681],
    [0.82657141, 0.02065795, 0.87958841, 0.29988512, 0.82186495, -0.28324764, 0.58437121, -0.06839288, -0.00416189, 0.84478942],
    [-0.27692707, 0.74184056, -0.42558621, 0.09344087, -0.62584192, 0.81013761, -0.31581144, 0.7584227, 0.88503549, -0.40758501],
    [-0.42749522, 0.46736378, -0.47822084, 0.37055496, -0.57160225, 1.01105776, -0.09805699, 0.70233661, 0.89041019, -0.07569245]
  ])
  b3 = np.array([
    [-0.41412879],
    [0.24381352],
    [0.33528586],
    [-0.25654328],
    [-0.31431223],
    [-0.38110109],
    [-0.32278912],
    [-0.41121698],
    [0.37375257],
    [0.17594657]
  ])
  W4 = np.array([[-1.8039257, 0.94493263, 1.87531384, -0.84019212, 0.27014966, 0.33169695, -1.92468916, -1.58107589, 1.65518903, 1.57033903]])
  b4 = np.array([[0.18566234]])
  W = [W1,W2,W3,W4]
  b = [b1,b2,b3,b4]

  mu = np.array([7.26190476, 4.02380952, 451.86809524])
  sigma = np.array([3.04771205, 0.80143013, 253.09262255])
  x = (x-mu)/sigma
  prediction = predict(x,W,b)
  return prediction.item()

def predictRed(x):
  W1 = np.array([
    [0.56712484, 0.92890239, -0.74301922],
    [-0.35903431, 0.49954377, -1.00767442],
    [0.57505262, 0.09119858, 0.56181714],
    [0.55610265, 0.39155656, 0.21646199],
    [0.61328547, 0.97384918, -0.75918193],
    [1.29737234, 0.42321072, -0.0740711],
    [0.63572106, -0.07146399, 0.82496821],
    [1.26549455, 0.67380268, -0.20529239],
    [1.00293264, 1.28426124, -0.68193171],
    [0.54608295, -0.12259362, 0.78114111]
  ])
  b1 = np.array([
    [0.0650066],
    [0.20413788],
    [-0.54058233],
    [0.27681348],
    [0.09155131],
    [-0.17331425],
    [-0.6034529],
    [0.03879836],
    [0.34298514],
    [-0.52013338]
  ])
  W2 = np.array([
    [0.32052245, 0.09748097, 0.50615193, 0.03724344, 0.52009188, -0.16551516, 0.44960204, 0.09708197, 0.19356488, 0.44775809],
    [0.79902237, 0.09907373, 0.32915364, 0.07220262, 0.44472415, -0.18037685, 0.62570104, -0.10441796, 0.43066622, 0.29938898],
    [0.15652886, -0.28912468, 0.11317487, 0.25551999, 0.35426108, -1.02859661, 0.26165893, -1.13229466, 0.69452191, 0.29771367],
    [0.1167295, 0.6117578, 0.29368624, 0.30069624, 0.12486476, 0.45864844, 0.29593064, 0.39643928, 0.69686633, 0.25841957],
    [0.42744727, -0.60490761, 0.07666038, 0.54705974, 0.27267271, -0.45185191, 0.3782944, -0.5378096, 0.73619372, 0.29786215],
    [0.51796228, 0.69950996, 0.37873461, 0.20142768, 0.3060542, 0.47530984, 0.29110567, 0.46195963, 0.66255101, 0.34117928],
    [0.25766909, 0.28836708, 0.28884737, 0.11648052, 0.34969915, -0.03076047, 0.49231444, 0.13431908, 0.18626375, 0.3647046],
    [0.53006883, 0.14793516, 0.54732405, -0.137226, 0.72025623, -0.20253568, 0.288199, 0.01494994, 0.50290376, 0.61212529],
    [0.35807214, 0.4545071, 0.50885742, 0.13058398, 0.32876781, 0.17598438, 0.49184056, 0.23084588, 0.58818354, 0.22754361],
    [0.30033699, 0.35981158, 0.16448779, 0.00799968, 0.61370393, 0.0493906, 0.4041983, 0.16642421, 0.37920289, 0.27420236]
  ])
  b2 = np.array([
    [-0.15973344],
    [-0.16391732],
    [0.75179025],
    [-0.59003846],
    [0.58341558],
    [-0.67476004],
    [-0.27838769],
    [-0.24092291],
    [-0.43852367],
    [-0.34731265]
  ])
  W3 = np.array([
    [0.38143384, 0.54377375, 0.05717634, 0.03930602, 0.44267329, 0.18951868, 0.40168254, 0.36136344, 0.41809745, 0.40152631],
    [0.30460154, 0.19108645, 0.05980634, 0.07384052, 0.18320607, 0.10453295, 0.17237738, 0.40284962, 0.26684053, 0.07760263],
    [0.21451003, 0.5910259, 0.14354476, 0.09476539, 0.32066071, 0.36740488, 0.20001854, 0.47639139, 0.45937772, 0.44421436],
    [0.1931768, 0.30784034, 0.15782294, 0.30640579, 0.15677065, 0.05626164, 0.09502649, 0.32252633, 0.27105495, 0.28699255],
    [0.26886053, 0.53684838, 0.09828505, 0.17507482, 0.38915129, 0.35923117, 0.32376359, 0.30415526, 0.13105074, 0.25275974],
    [0.38806876, 0.26509446, 0.16720703, 0.05008859, 0.29733758, 0.36899554, 0.1515932, 0.4514633, 0.29410903, 0.45444086],
    [-0.07000781, -0.3386373, 1.96958909, 1.25080058, 1.17334552, 1.31163658, 0.29729113, -0.25923486, 0.83148252, 0.62719541],
    [0.53563854, 0.42687232, 0.2037545, 0.25624633, 0.37812162, 0.26416363, 0.31894416, 0.46090208, 0.45695144, 0.47800294],
    [0.2571053, 0.51406167, 0.08425147, 0.05521428, 0.22923575, 0.24257504, 0.10295652, 0.50969923, 0.36225257, 0.08869001],
    [0.23443534, 0.36862669, 0.0975217, 0.28704214, 0.3853967, 0.41497518, 0.35806461, 0.57284627, 0.38447937, 0.45564304]
  ])
  b3 = np.array([
    [-0.3758868],
    [-0.21080722],
    [-0.45221158],
    [-0.3078724],
    [-0.37119998],
    [-0.4054992],
    [-0.202542],
    [-0.51767339],
    [-0.29114576],
    [-0.52547164]
  ])
  W4 = np.array([[0.92729131, 0.60381862, 1.03441699, 0.57066698, 0.83362112, 0.86138376, -3.05897028, 1.0569616, 0.7456955, 1.07009356]])
  b4 = np.array([[1.73266468]])
  W = [W1,W2,W3,W4]
  b = [b1,b2,b3,b4]

  mu = np.array([8.21428571, 4.14285714, 527.16095238])
  sigma = np.array([3.52228088, 0.86110197, 296.56989639])
  x = (x-mu)/sigma
  prediction = predict(x,W,b)
  return prediction.item()

def predictOrange(x):
  W1 = np.array([
    [0.59407427, 0.35271824, -0.19719994],
    [0.66019676, 0.06306844, -0.05026397],
    [0.60220087, 0.03646159, -0.13116415],
    [0.81561107, -0.07652931, 0.20123226],
    [0.39214526, 0.3566286, -0.36974158],
    [0.95180094, 0.05839149, -0.1096698],
    [0.45903797, -0.24953682, 0.2865837],
    [1.35401998, 0.02692727, -0.06455542],
    [1.15269977, 0.48329318, -0.48992407],
    [0.15480257, -0.1662042, 0.41137204]
  ])
  b1 = np.array([
    [0.02614663],
    [0.09562068],
    [0.06485389],
    [0.20017459],
    [0.01185549],
    [-0.0041585 ],
    [0.17294886],
    [-0.06005321],
    [0.03332941],
    [-0.12033879]
  ])
  W2 = np.array([
    [0.05060521, 0.26087341, 0.46462656, 0.25440198, 0.27326171, 0.18821699, 0.28466655, 0.45958866, 0.09935881, 0.26224027],
    [0.47483628, 0.42790373, 0.19581266, 0.43658828, 0.02137317, 0.25078593, 0.4387079, 0.19683121, 0.21446635, 0.02714318],
    [0.00211968, 0.38063644, 0.11823688, 0.0906096, 0.17577579, 0.0819486, 0.18469269, 0.18814325, 0.39171307, 0.18713416],
    [0.02210988, 0.23420904, 0.31085415, 0.10507841, -0.01978351, 0.289154, 0.18778005, 0.35075739, 0.55209092, 0.11327851],
    [0.45350041, 0.13335628, 0.12272954, 0.49718729, 0.16906846, 0.09801985, 0.49994595, 0.1647695, 0.35707171, 0.37005861],
    [0.37838048, 0.35520535, 0.36842078, 0.089592, 0.07659142, 0.46809265, 0.09280587, 0.56781688, 0.45332453, 0.11825934],
    [0.08623879, 0.48714084, 0.25652661, 0.35635845, 0.17112784, 0.13226618, 0.46321917, 0.27623689, 0.03129918, 0.29622298],
    [0.12582972, 0.31222403, 0.42817075, 0.07967223, 0.36160506, 0.34790698, -0.1033024, 0.55724569, 0.47541667, 0.27274108],
    [0.05653353, 0.15536173, 0.45120635, 0.21926813, -0.02564389, 0.4276879, 0.18826684, 0.60041259, 0.53285311, -0.16195328],
    [-0.00130733, 0.10559179, 0.03727457, 0.05051462, 0.33728169, 0.32123431, 0.12541671, 0.54790693, 0.24297443, -0.05720208]
  ])
  b2 = np.array([
    [-0.01882931],
    [-0.0011894],
    [-0.03428982],
    [-0.2865626],
    [-0.01034047],
    [-0.14149899],
    [-0.01081191],
    [-0.1789362],
    [-0.24521545],
    [-0.13823006]
  ])
  W3 = np.array([
    [0.41808072, 0.62701443, 0.30275573, -0.04462125, 0.59822035, 0.10854155, 0.55631068, 0.15955175, 0.33240642, 0.28704213],
    [0.29734921, 0.12656121, 0.05763653, 0.07905778, 0.07887624, 0.09771435, 0.14975921, 0.35583557, 0.29264074, 0.02210384],
    [-0.01115808, 0.38019564, 0.25504424, 0.16148062, 0.00571607, 0.4011656, 0.01259286, 0.32088986, 0.5351123, 0.43199865],
    [0.07647236, 0.19682538, 0.28322459, 0.42682847, 0.01526689, 0.06410166, -0.01440033, 0.26551268, 0.34604231, 0.298001],
    [0.26026792, 0.59595787, 0.29847611, 0.12666971, 0.43806932, 0.33502222, 0.45357071, 0.10320969, -0.01389627, 0.12907031],
    [0.23995407, 0.04963923, 0.34013527, 0.10534062, 0.02152983, 0.43461349, 0.01588411, 0.35197564, 0.33995196, 0.47000058],
    [0.13971429, 0.06588808, 0.34304644, 0.36191191, 0.43206406, 0.45000096, 0.03101909, 0.12545924, 0.30559278, 0.43453046],
    [0.33988384, 0.15588857, 0.39597833, 0.38244061, 0.00145912, 0.30520937, 0.14655781, 0.31927563, 0.5500598, 0.48189924],
    [0.18216471, 0.43841113, 0.08909481, 0.08440984, 0.04370958, 0.26408725, 0.00571686, 0.45262089, 0.4162166, 0.02694464],
    [0.06753373, 0.13340673, 0.07307192, 0.42180015, 0.10333947, 0.48459896, 0.22424898, 0.45204859, 0.462504, 0.45022722]
  ])
  b3 = np.array([
    [-1.93679063e-03],
    [-4.20218618e-04],
    [-3.12636843e-01],
    [-2.79124512e-01],
    [-1.41801448e-03],
    [-3.12485135e-01],
    [-9.54539695e-04],
    [-5.28114028e-01],
    [-2.69463739e-02],
    [-1.63441188e-01]
  ])
  W4 = np.array([
    [0.03016498, 0.26209518, 0.53488746, 0.27863954, 0.07075076, 0.41963325, 0.04690719, 0.45902048, 0.25586456, 0.52216827],
    [0.27063388, 0.41080066, 0.18670188, 0.0174631, 0.45981479, 0.21584874, 0.03441203, 0.1102312, 0.29716781, 0.3561597],
    [-0.12543019, 0.44499961, 0.33659535, 0.57902348, 0.16634288, 0.51086814, 0.29850437, 0.47245498, 0.17905992, 0.40390004],
    [0.44364905, 0.40220906, 0.29513424, 0.26404578, 0.47707647, 0.10190819, 0.32038789, 0.13820404, 0.18309759, 0.16154756],
    [0.37192055, 0.16158043, 0.18552604, 0.10587464, 0.59542126, 0.22774501, 0.11224488, 0.08964867, 0.15168386, 0.28998932],
    [0.1388863, 0.42958147, 0.55269912, 0.33580092, -0.09858303, 0.59446214, 0.29494781, 0.62666654, 0.34860239, 0.56181443],
    [0.20391846, 0.34040446, 0.25497092, 0.20946697, 0.12974947, 0.02870114, 0.15837841, 0.03129918, 0.43473234, 0.07917025],
    [0.61151786, 0.41562345, 0.18951934, 0.14582807, 0.27839357, 0.11478086, 0.18495341, -0.02370449, 0.26109254, 0.05317764],
    [0.69650886, 0.44008303, -0.01007207, -0.07066914, 0.32488036, 0.1205528, 0.36872838, -0.04601696, 0.11685825, 0.29569935],
    [0.29034202, 0.28706039, 0.0524693, -0.00379345, 0.31742422, 0.16969216, 0.08024018, 0.2182124, 0.24270738, 0.25548312]
  ])
  b4 = np.array([
    [-6.66560225e-01],
    [-1.10421992e-04],
    [-6.99258369e-01],
    [-1.54821177e-04],
    [-1.27398517e-04],
    [-9.15926726e-01],
    [-8.95272420e-02],
    [-1.16761984e-04],
    [-2.12465388e-04],
    [-7.53410181e-05]
  ])
  W5 = np.array([[-1.00588169, 0.35989881, -1.05365457, 0.39510527, 0.47518445, -1.34437843, 0.02613311, 0.58037562, 0.71308094, 0.29555772]])
  b5 = np.array([[-0.35484612]])
  W = [W1,W2,W3,W4,W5]
  b = [b1,b2,b3,b4,b5]

  mu = np.array([5.57142857, 3.95238095, 388.35404762])
  sigma = np.array([3.33197251, 0.78535345, 213.13134011])
  x = (x-mu)/sigma
  prediction = predict(x,W,b)
  return prediction.item()

def predictYellow(x):
  W1 = np.array([
    [0.50204968, 0.4208998, -0.08252337],
    [0.74955069, 0.00188745, -0.00262226],
    [0.32238458, 0.117989, 0.24798583],
    [0.65414544, 0.14930995, 0.4692978],
    [0.37469752, 0.44962445, -0.12374472],
    [0.75902965, 0.17807683, 0.38314432],
    [0.33613585, -0.04359957, 0.56249144],
    [1.05359527, -0.15739437, 0.15840222],
    [0.96602072, 0.53731139, -0.01658438],
    [0.23678911, -0.09199262, 0.60181246]
  ])
  b1 = np.array([
    [-0.08041917],
    [0.58519486],
    [-0.08513916],
    [-0.03237712],
    [-0.18508381],
    [0.07834316],
    [-0.10620366],
    [0.90374612],
    [0.08481923],
    [-0.15166]
  ])
  W2 = np.array([
    [3.88902396e-02, 3.03880273e-01, 4.24658806e-01, 2.45329600e-01, 2.72892840e-01, 1.62240847e-01, 3.03274919e-01, 4.73258043e-01, 3.24312516e-02, 3.21152567e-01],
    [4.35583461e-01, 4.84682886e-01, 1.20561630e-01, 3.58403286e-01, 1.03428765e-02, 2.21898827e-01, 4.01195180e-01, 2.51575126e-01, 1.54004641e-01, 4.16487633e-02],
    [2.11518370e-03, 4.68933358e-01, 8.96129093e-02, 1.34069966e-01, 1.62874469e-01, 6.33197664e-02, 2.52164346e-01, 2.21351632e-01, 3.08194054e-01, 2.90606414e-01],
    [4.14671056e-02, 3.33040654e-01, 3.06914570e-01, 2.01495346e-01, -2.04810016e-02, 2.78310972e-01, 2.94007781e-01, 3.73879911e-01, 4.65935870e-01, 2.44108211e-01],
    [3.99119800e-01, 1.98359486e-01, 5.82375570e-02, 3.78383678e-01, 1.30460002e-01, 1.14574736e-01, 4.11487568e-01, 2.98994367e-01, 3.81296380e-01, 3.04421271e-01],
    [3.88013586e-01, 4.58800815e-01, 3.30872883e-01, 1.69335543e-01, 6.84965583e-02, 4.37225410e-01, 1.86845358e-01, 5.91186692e-01, 3.38468313e-01, 2.56200212e-01],
    [4.71969523e-02, 5.20988184e-01, 1.98442347e-01, 2.62095136e-01, 1.56587485e-01, 1.19025997e-01, 4.01133652e-01, 3.33403275e-01, 1.64676683e-02, 2.65874403e-01],
    [1.38897572e-01, 3.70887757e-01, 3.91440198e-01, 1.61416169e-01, 3.68721415e-01, 2.93318199e-01, 1.73689594e-03, 5.17115357e-01, 3.26616148e-01, 4.30709632e-01],
    [7.15148270e-02, 2.58105869e-01, 4.10960310e-01, 3.22814667e-01, -1.49255705e-02, 3.73225660e-01, 3.30929090e-01, 5.80334346e-01, 3.59125207e-01, 3.68416927e-02],
    [-1.83906913e-05, 1.85318250e-01, 6.02117029e-03, 1.25676881e-01, 3.25152263e-01, 2.84719007e-01, 2.40785809e-01, 5.57404911e-01, 1.05499065e-01, 9.75201303e-02]
  ])
  b2 = np.array([
    [6.31436235e-05],
    [3.72969436e-03],
    [-1.48990322e-04],
    [1.10888495e-02],
    [-1.78239983e-04],
    [1.08465597e-03],
    [-1.22856414e-04],
    [2.27596281e-04],
    [1.31706742e-02],
    [1.89705477e-03]
  ])
  W3 = np.array([
    [0.30128772, 0.4819609, 0.28807792, 0.06182039, 0.38725365, 0.17611731, 0.41105901, 0.22379151, 0.44648106, 0.37061656],
    [0.22826623, 0.03756895, 0.01443717, 0.02229892, -0.00173916, 0.00762166, 0.08099713, 0.2893179, 0.21103948, -0.01401106],
    [0.03172354, 0.43373616, 0.26115139, 0.08579875, 0.10578933, 0.32827207, 0.0932207, 0.25575101, 0.42443584, 0.37736339],
    [0.14186101, 0.2629741, 0.30904616, 0.41821654, 0.09673022, 0.07181071, 0.07447792, 0.26220749, 0.32507786, 0.28640177],
    [0.16293055, 0.46795324, 0.28127175, 0.196422, 0.25983631, 0.36979385, 0.32772488, 0.14407935, 0.05833901, 0.18451593],
    [0.29264589, 0.10870423, 0.35136014, 0.04247872, 0.1207449, 0.37840815, 0.10429314, 0.29810025, 0.24701694, 0.42346682],
    [0.2136931, 0.14517491, 0.40972455, 0.48224239, 0.48619662, 0.5970403, 0.11987469, 0.23248865, 0.43477498, 0.51418633],
    [0.46752018, 0.3017174, 0.45082465, 0.34450935, 0.20525788, 0.29500942, 0.3254558, 0.29981349, 0.47861183, 0.45027575],
    [0.20267079, 0.46350311, 0.1039084, 0.09178407, 0.07873533, 0.27381659, 0.04413713, 0.45682558, 0.40903861, 0.03088159],
    [0.09238644, 0.16709763, 0.07774632, 0.37759395, 0.15891484, 0.44319057, 0.28307579, 0.4075986, 0.39239879, 0.41690113]
  ])
  b3 = np.array([
    [-0.01024255],
    [-0.00634171],
    [-0.01010015],
    [-0.01128848],
    [-0.00624763],
    [-0.00620391],
    [-0.01439294],
    [-0.01368696],
    [-0.00939467],
    [-0.01230576]
  ])
  W4 = np.array([[-0.55752022, -0.05240092, -0.34350271, -0.43286124, -0.40853058, -0.36432553, -0.85787021, -0.64594484, -0.42002947, -0.47004213]])
  b4 = np.array([[2.35795155]])
  W = [W1,W2,W3,W4]
  b = [b1,b2,b3,b4]

  mu = np.array([4.04761905, 4.0, 366.42])
  sigma = np.array([3.89720523, 0.78679579, 207.96031483])
  x = (x-mu)/sigma
  prediction = predict(x,W,b)
  return prediction.item()

def predictGreen(x):
  W1 = np.array([
    [0.20091967, 1.06009258, -0.67538836],
    [0.75307307, -0.94817356, 0.59854008],
    [-1.26222816, 0.0636558, -0.05422262],
    [0.15596241, 0.49644412, 0.18288267],
    [0.24064011, 0.97398812, -0.63104345],
    [0.07547229, 0.39927382, -0.07537956],
    [-1.16041518, 0.03236944, -0.02186932],
    [0.66372571, 0.76077682, -0.31945991],
    [0.66115979, 1.02392605, -0.72489398],
    [0.34069876, -0.08776948, 0.45733194]
  ])
  b1 = np.array([
    [-0.18900703],
    [0.01924132],
    [1.37003117],
    [0.11203194],
    [-0.21271957],
    [-0.16790546],
    [0.90452295],
    [0.25766383],
    [0.07383211],
    [-0.40406378]
  ])
  W2 = np.array([
    [0.06446432, 0.36522717, 0.39646983, -0.11402866, 0.35880359, -0.11185814, 0.02616658, 0.24485581, 0.05358678, 0.23071795],
    [0.59879341, 0.63466172, 0.32101942, -0.18831932, 0.24343608, -0.15063654, -0.25122061, 0.09547672, 0.31288755, -0.11837347],
    [-0.10395604, 1.00004114, -0.30208315, -0.09254375, 0.16877012, -0.21057291, 0.57994709, -0.45484831, -0.00357882, 0.47132978],
    [-0.17790092, 0.40985864, -0.07072405, -0.17529716, -0.19650886, -0.06206591, 0.36279096, -0.02062797, 0.35501942, 0.27123794],
    [0.35033317, -0.01240382, -0.10881011, -0.02040735, 0.12675164, -0.19303339, 0.36411818, 0.14379565, 0.48259021, 0.16788316],
    [0.35891427, 0.42719284, 0.37748354, -0.51372372, 0.10316074, -0.06356885, -0.25759258, 0.38735057, 0.50545501, 0.0836466],
    [-0.14062384, 0.65208992, -0.17285789, -0.05247343, -0.01337984, -0.16518744, 0.47397207, -0.01825163, -0.10312274, 0.31199149],
    [0.46503141, 0.75124634, 0.92541821, -0.26367387, 0.76586656, 0.01143629, -1.20383985, 0.68532325, 0.64159676, 0.34791683],
    [0.07635949, 0.37915867, 0.30898402, -0.31853445, 0.07840847, -0.11808541, 0.00548361, 0.29661203, 0.48743846, -0.14121149],
    [-0.36355629, -0.9462911, -0.63020951, -0.3277132, -0.05887186, -0.12911775, 0.14595138, 0.70914065, 0.34156245, -0.29922059]
  ])
  b2 = np.array([
    [-0.40381445],
    [-0.28314779],
    [0.03115497],
    [-0.26530842],
    [-0.35507862],
    [-0.39243582],
    [-0.23552274],
    [-0.05143194],
    [-0.469101],
    [1.11176461]
  ])
  W3 = np.array([
    [0.13084298, 0.40947576, 0.21979128, -0.06528763, 0.30246908, 0.11152112, 0.25807482, 0.1910105, 0.33810908, 0.36259576],
    [0.37939783, 0.30000478, -0.53411392, -0.19783696, -0.17709065, 0.32749624, -0.2282171, 0.96882674, 0.29280745, -0.86538637],
    [-0.05988157, 0.38690671, 0.21651654, 0.06066294, 0.07023979, 0.34501721, -0.00294603, 0.24237888, 0.44140914, 0.41213177],
    [0.06396165, 0.27204652, 0.1156468, 0.25323426, 0.01511826, 0.08976796, -0.11257508, 0.40209257, 0.23426536, 0.08073041],
    [0.02311958, 0.38208031, 0.31098302, 0.14841666, 0.2161496, 0.30761042, 0.23818082, 0.05428611, 0.01083334, 0.3082761],
    [0.15351583, 0.05114827, 0.30550239, -0.02526815, 0.08006959, 0.35617773, -0.01075538, 0.27265024, 0.20682341, 0.49390548],
    [-0.00780693, 0.0045105, 0.31174148, 0.24594408, 0.36121576, 0.38055757, -0.08051849, 0.10067992, 0.17249451, 0.47745319],
    [0.36692517, 0.16251265, 0.69461791, 0.29994965, 0.31061552, -0.0192061, 0.35430104, -0.31213215, 0.34926236, 0.85326954],
    [0.31362391, 0.5900023, -0.36714884, -0.04377761, -0.07946269, 0.54329955, -0.25841243, 0.90243014, 0.54923101, -0.71343014],
    [-0.06266838, 0.04957664, 0.14397168, 0.36788772, 0.11411107, 0.36991818, 0.21568336, 0.24421464, 0.36944778, 0.59617928]
  ])
  b3 = np.array([
    [-0.24132546],
    [-0.00148224],
    [-0.14749572],
    [-0.14421301],
    [-0.18517927],
    [-0.21780296],
    [-0.16899124],
    [-0.25897486],
    [-0.10690309],
    [-0.19881687]
  ])
  W4 = np.array([
    [0.3564289, -0.01188848, 0.48255339, 0.20388845, 0.31684632, 0.40812128, 0.22119437, 0.5198402, -0.00579897, 0.53860526],
    [0.24492745, 0.25304499, 0.36826187, 0.15143337, 0.43251533, 0.38475866, 0.16379418, 0.33568879, 0.2301949, 0.54110047],
    [-0.0678752, 0.71823672, 0.18151098, 0.42959218, 0.24467368, 0.34123091, 0.12105849, -0.03742096, 0.50745091, 0.22601738],
    [0.433003, 0.2077923, 0.43294686, 0.3700412, 0.45982037, 0.24721424, 0.43985177, 0.35631175, 0.04527365, 0.30235949],
    [0.24384418, 0.01097201, 0.34959376, 0.24104024, 0.48862149, 0.37991038, 0.18308526, 0.28386598, 0.0594188, 0.43388786],
    [0.52733298, 0.18805368, 0.42447065, 0.20079739, 0.21339943, 0.51824597, 0.4211716, 0.56345231, 0.10474098, 0.48810042],
    [0.19399339, 0.66840291, 0.30641079, 0.22903403, 0.16612196, 0.02987573, 0.04469209, -0.26680007, 0.89302413, 0.07906176],
    [0.28927162, 0.66349092, 0.31544656, 0.24527441, 0.04616389, 0.17320922, 0.01100561, -0.21266328, 0.62866417, 0.09592726],
    [0.33346342, 0.65735364, 0.11589189, 0.03650355, 0.0587428, 0.18508402, 0.18231999, -0.20859019, 0.44261284, 0.32910044],
    [0.23732998, 0.20304152, 0.17132679, 0.08946698, 0.27774776, 0.27910603, 0.13759654, 0.32931325, 0.21642514, 0.3594119]
  ])
  b4 = np.array([
    [-0.17710572],
    [-0.1184998],
    [-0.81223085],
    [-0.1264443],
    [-0.09976076],
    [-0.19681979],
    [-0.81972692],
    [-0.7591677],
    [-0.7411368],
    [-0.1150286],
  ])
  W5 = np.array([
    [0.05405713, 0.31707188, -0.0341967, 0.22021924, 0.3467863, -0.00339454, 0.02276215, 0.26512717, 0.26009754, 0.22951137],
    [0.48798015, 0.50251437, 0.10758147, 0.49165155, 0.14874859, 0.42062086, 0.05571921, 0.0207677, 0.13054806, 0.08213794],
    [0.46821774, 0.42890988, -0.14229772, 0.25003734, 0.41167398, 0.31043237, 0.0989006, -0.0513949, 0.12131084, 0.52802718],
    [0.1346158, 0.05386731, 0.23799611, 0.24330902, 0.443421, 0.28839103, 0.28951126, 0.08852328, 0.09116476, 0.05643438],
    [0.33384492, 0.20933527, 0.28549399, 0.49960065, 0.14097872, 0.34034548, 0.65336264, 0.54405205, 0.49929805, 0.21158315],
    [0.18592092, 0.25845497, 0.48452666, 0.06822687, 0.08222291, 0.08980779, 0.41131236, 0.26265407, 0.06958252, 0.21822023],
    [0.28462279, 0.57077027, 0.37758132, 0.18656582, 0.39627462, 0.55977656, 0.4865499, 0.60798804, 0.44904198, 0.3782616],
    [1.08899602, 0.9570278, -0.609425, 1.04906564, 0.86757976, 1.27094192, -0.57862074, -0.50859296, -0.51289788, 0.66893158],
    [0.25059765, 0.5037696, 0.60451144, 0.49223043, 0.47520671, 0.34690252, 0.70015587, 0.46954154, 0.59936839, 0.4213573],
    [0.08272404, 0.0447859, -0.0780739, 0.04898746, 0.22325017, 0.0751852, -0.07158213, 0.25567162, 0.10553647, 0.34429919]
  ])
  b5 = np.array([
    [-1.12913737e-03],
    [-3.18519354e-03],
    [-3.41357540e-03],
    [-1.39102909e-03],
    [-7.90224479e-01],
    [-3.98983323e-01],
    [-1.04563592e+00],
    [-7.72582714e-03],
    [-1.08553807e+00],
    [-9.41862655e-04]
  ])
  W6 = np.array([[-0.31022728, -0.73475515, -0.79537513, -0.35416518, 1.21739464, 0.58975727, 1.44716037, -2.38412256, 1.56047492, -0.22833377]])
  b6 = np.array([[2.62948765]])
  W = [W1,W2,W3,W4,W5,W6]
  b = [b1,b2,b3,b4,b5,b6]

  mu = np.array([7.20238095, 3.98809524, 443.08785714])
  sigma = np.array([3.57497839, 0.85208494, 257.39240961])
  x = (x-mu)/sigma
  prediction = predict(x,W,b)
  return prediction.item()

def predictCyan(x):
  W1 = np.array([
    [0.60314704, 1.38127215, 0.25517279],
    [0.64667057, 0.08151007, 0.01436618],
    [-0.75795725, 0.85282907, 0.20535946],
    [0.02992242, 0.17651704, 0.31816621],
    [-1.18769978, 1.57178623, -0.14498362],
    [1.83914207, 0.05634639, 0.47357366],
    [-0.12774824, -0.05884967, 0.44861683],
    [1.75566909, 0.3473661, 1.58110815],
    [0.75908737, 1.72823839, -0.01913246],
    [-0.10006977, -0.10370866, 0.5345147]
  ])
  b1 = np.array([
    [0.19122872],
    [-0.23804522],
    [-0.51494244],
    [-0.38211003],
    [-0.22985762],
    [-0.88619803],
    [-0.33141595],
    [0.15944509],
    [1.22606467],
    [-0.30892742]
  ])
  W2 = np.array([
    [-0.63730939, 0.03406306, 1.06806674, 0.25175526, 1.14443077, -0.36943852, 0.27861916, 1.37462848, -1.10981702, 0.32880197],
    [ 0.83475894, 0.47355619, -0.10422536, 0.23032507, -0.24573847, 0.68457249, 0.37926085, -0.3664851, 0.56886673, 0.01098196],
    [-0.18134166, 0.0468097, 0.32709989, 0.0728988, 0.43295737, -0.95766749, 0.21237822, 0.9039312, 0.14961319, 0.28035151],
    [0.0329923, 0.27027522, 0.29774318, 0.10282716, -0.06519401, 0.38175888, 0.27559631, -0.00822479, 0.5811314, 0.23691988],
    [0.39057468, 0.0605605, 0.05168632, 0.2885012, -0.07312001, 0.02492055, 0.38161604, -0.16654335, 0.46861178, 0.28545489],
    [0.73977023, 0.35301414, 0.12364585, 0.02023254, -0.14474869, 0.7695592, 0.17237058, -0.23373706, 0.64861821, 0.24128374],
    [-0.11099523, 0.25435106, 0.36220537, 0.21264712, 0.32863501, -0.52772659, 0.31843252, 0.92840983, -0.09662748, 0.19322635],
    [0.2716498, 0.36007782, 0.35630145, 0.02478994, 0.76257196, 0.50600211, -0.06672126, 0.00842695, 0.89724859, 0.36083852],
    [0.14956052, 0.24742041, 0.45272042, 0.16504141, -0.37265727, 0.56153979, 0.25026675, 0.25593388, 0.8961124, -0.03877163],
    [-0.38952999, -0.45613651, 0.48166405, 0.14234955, 1.07337626, -0.50948647, 0.30046804, 1.11630674, -0.57448085, 0.20490958]
  ])
  b2 = np.array([
    [-4.35522839e-01],
    [-6.39833751e-01],
    [-4.24366681e-01],
    [-3.29256614e-07],
    [-1.53478917e-01],
    [-7.27473605e-01],
    [-2.26293396e-01],
    [6.98699480e-07],
    [-1.89119658e-06],
    [-9.55616090e-01]
  ])
  W3 = np.array([
    [0.37433362, 0.28139269, 0.32299338, 0.10299826, 0.41590473, -0.10439626, 0.40103329, 0.14737618, 0.56751004, 0.39314804],
    [0.15676535, 0.06489638, 0.0234244, 0.34366098, 0.15530454, 0.00770226, 0.07004581, 1.23838393, 0.57505819, -0.11450148],
    [-0.36118145, 0.60911669, 0.05171283, 0.04213453, 0.0957362, 0.49739416, -0.12344222, 0.15504601, 0.31718235, 0.01229162],
    [0.31753879, 0.04861868, 0.39584509, 0.4888481, 0.13549015, -0.22687718, 0.12038841, 0.47913711, 0.45128443, 0.39486508],
    [-0.09864601, 0.51696724, 0.12814743, 0.14734372, 0.23069459, 0.39137981, 0.1587523, 0.06245014, -0.01924535, -0.05543613],
    [0.92044001, -0.35885235, 0.67539748, 0.13235361, 0.21288169, -0.20642014, 0.37571485, 0.2153976, 0.50792649, 0.90357507],
    [0.19310016, -0.07932889, 0.38050223, 0.40541943, 0.44284027, 0.25620273, 0.03101268, 0.06991751, 0.38363351, 0.4493165],
    [1.56483663, -0.56208018, 1.00345207, 0.38728722, 0.16732196, -0.63120968, 0.82257337, 0.12830248, 0.83922844, 1.30824096],
    [-0.60336647, 0.90938717, -0.27969066, 0.1070939, 0.1444892, 0.73521891, -0.3282931, 0.410343, 0.34328792, -0.72062558],
    [-0.38585389, 0.34990568, -0.18647756, 0.28520784, 0.11338058, 0.61846644, 0.00558253, 0.23442626, 0.21681313, -0.01628338]
  ])
  b3 = np.array([
    [-2.32358651e-01],
    [1.07043831e-02],
    [-5.33688046e-01],
    [-2.05186054e-06],
    [-2.23864333e-01],
    [-2.19472272e-01],
    [-1.97235985e-01],
    [-3.00371691e-01],
    [-8.74767704e-01],
    [-6.76447285e-01]
  ])
  W4 = np.array([
    [0.38545438, 0.17045319, 0.14646727, 0.20145369, 0.11738819, 0.5286689, 0.11032592, 0.78769132, -0.19804394, 0.13299633],
    [-0.02972606, 0.56954071, 0.49010231, 0.03290363, 0.45997942, -0.10847953, -0.05060487, -0.52057131, 0.79093373, 0.66467827],
    [0.31122417, 0.27311412, -0.15386473, 0.54597109, 0.10543547, 0.79346239, 0.45997586, 1.15319601, -0.49739224, -0.08483781],
    [0.33408415, 0.25009269, 0.25845218, 0.23870368, 0.3332821, 0.11763594, 0.28862527, 0.25722117, 0.06096474, 0.09628306],
    [-0.06080802, 1.25096302, 0.42530527, 0.75734129, 0.48087331, 0.5373224, -0.10972326, -0.46533506, 0.50325177, 0.51111179],
    [0.89060987, 0.32674606, -0.18473147, 0.39720928, -0.11592352, 1.11047681, 0.55105676, 1.71831437, -0.69054555, -0.19102728],
    [0.11578842, 0.36148007, 0.41954953, 0.10351534, 0.24650417, -0.27838014, 0.10250021, -0.46845142, 0.79556503, 0.26064386],
    [0.1590058, 0.45172002, 0.55124166, 0.12832661, 0.17215482, -0.23551526, 0.0609827, -0.65232128, 0.77712636, 0.405722],
    [0.21824772, 0.3893194, 0.2960818, -0.09829224, 0.14991182, -0.16585021, 0.22771456, -0.53981449, 0.51166401, 0.57682232],
    [0.08741093, 0.66902778, 0.12002004, 0.24649724, 0.21993128, 0.29575525, -0.01398914, 0.06640384, 0.31290724, 0.30614374]
  ])
  b4 = np.array([
    [-0.41720249],
    [-0.00609637],
    [-0.80813678],
    [-0.38036083],
    [-0.01338911],
    [-0.81498991],
    [-0.1932996],
    [-0.1417574],
    [-0.23636739],
    [-0.00712509]
  ])
  W5 = np.array([[-0.93001024, 1.20323492, -1.641266, -0.31273455, 1.75890185, -2.37269036, 0.94506057, 1.14348592, 0.88419648, 0.73628588]])
  b5 = np.array([[0.22389523]])
  W = [W1,W2,W3,W4,W5]
  b = [b1,b2,b3,b4,b5]

  mu = np.array([6.0952381, 4.04761905, 430.48])
  sigma = np.array([3.45590953, 0.8151068, 246.23919436])
  x = (x-mu)/sigma
  prediction = predict(x,W,b)
  return prediction.item()

def predictBlue(x):
  W1 = np.array([
    [1.30152893, 1.71608409, -0.33284669],
    [1.55248523, 0.21434945, -1.08322729],
    [1.02193005, 0.49504965, 0.7048453],
    [1.6367628, 0.08595803, 0.32729054],
    [1.06025201, 0.95594034, 0.83470283],
    [1.00107051, 0.6350844, -0.08813307],
    [1.06457599, 0.30363903, 1.00101529],
    [0.91236137, -0.62909386, -0.24694318],
    [1.75434207, -0.47961429, -0.39749866],
    [0.70446102, 0.31187123, 1.29395872]
  ])
  b1 = np.array([
    [1.0528253],
    [1.26277419],
    [-0.47762714],
    [0.2617768],
    [0.49484159],
    [0.12873515],
    [-0.48202615],
    [0.73087758],
    [0.34781794],
    [0.50220966]
  ])
  W2 = np.array([
    [-0.8622598, 0.91343927, -0.00290893, 0.86761817, 0.87028231, -0.00435789, -0.16116529, 0.14977572, -0.29273236, 0.90145924],
    [0.48549822, 0.51538576, 0.13750802, 0.29409983, 0.02399671, 0.19240276, 0.42446804, 0.13201441, 0.14817785, 0.04309097],
    [-0.32836791, 0.75000843, -0.06962478, 0.38039677, 0.36112377, 0.04480234, 0.07418568, -0.0335958, 0.24906449, 0.47453129],
    [0.40081377, -1.42102515, 0.95124459, -0.6100275, -0.55961852, 0.62345883, 0.99917566, 0.77323121, 1.16907245, -0.27868516],
    [0.7179087, 0.18842306, 0.18988372, 0.11006811, -0.08604216, 0.17132493, 0.54698768, 0.28174272, 0.55646221, 0.08108851],
    [1.50172241, -0.02554802, 0.87880655, -0.65744338, -0.67671428, 0.62990251, 0.78036071, 0.72031746, 0.80495618, -0.46064814],
    [-0.88560314, 1.11719976, -0.24590817, 0.91840937, 0.76963969, -0.04870431, -0.07986978, -0.00651207, -0.3355743, 0.86143196],
    [-0.27401637, 0.63827892, 0.21461523, 0.44935915, 0.62408602, 0.22908704, -0.18733206, 0.26379829, 0.18276991, 0.68777969],
    [0.75079886, 0.0290426, 0.72999839, -0.18658386, -0.42596229, 0.47045777, 0.6756458, 0.59117229, 0.64839005, -0.37943879],
    [0.03069438, -0.26338977, 0.12676138, -0.04458615, 0.13329481, 0.35069723, 0.36455989, 0.35065989, 0.26649827, -0.10094247]
  ])
  b2 = np.array([
    [0.07030015],
    [0.12201964],
    [0.08895991],
    [0.53995429],
    [0.20553084],
    [0.13464758],
    [0.0655853],
    [0.1065652],
    [0.36754183],
    [-0.10032643]
  ])
  W3 = np.array([
    [0.83202513, 0.44010135, 0.594651, -0.7110319, 0.23177979, -0.53097854, 1.007829, 0.53384801, 0.05386632, 0.27491149],
    [0.949346, 0.07443037, 0.42436604, -0.78243592, -0.08614457, -0.71114092, 0.86651614, 0.7470624, -0.12636572, -0.06274938],
    [-0.19315243, 0.42855744, 0.12253677, 0.34883476, 0.15842984, 0.55249865, -0.16251562, 0.09893194, 0.54062929, 0.38393963],
    [-0.26701155, 0.31240961, 0.08060981, 0.96809167, 0.26330753, 0.54399256, -0.39250959, 0.02091776, 0.65938495, 0.32875825],
    [0.46791902, 0.43773367, 0.45117336, -0.25994111, 0.16775803, -0.0477574, 0.66633813, 0.31539265, -0.18650376, 0.12551387],
    [0.68198568, 0.0925409, 0.57597131, -0.48764674, 0.02755403, -0.10677406, 0.53774051, 0.52889612, -0.01728534, 0.36369553],
    [-0.73230847, 0.354441, 0.02556453, 1.84291394, 0.88234438, 1.8075598, -0.85258619, -0.26206367, 1.24852904, 0.58971352],
    [0.79041137, 0.24563357, 0.64235464, -0.21550237, 0.06868593, -0.22060537, 0.69774385, 0.47484789, 0.16527658, 0.36221665],
    [-0.09365364, 0.46183978, -0.06000225, 0.42502533, 0.14451064, 0.55724055, -0.28174374, 0.26237779, 0.57628742, 0.03836337],
    [-0.34387975, 0.22305982, -0.13880741, 0.96075518, 0.31045192, 0.95074296, -0.18441989, 0.14150601, 0.71720612, 0.44946228]
  ])
  b3 = np.array([
    [-0.03660162],
    [0.12625652],
    [-0.31568433],
    [-0.22352109],
    [-0.03497866],
    [-0.00783372],
    [-0.25000988],
    [-0.11075277],
    [-0.32004466],
    [-0.31099076],
  ])
  W4 = np.array([[1.61552787, 1.82338958, -0.77329108, -1.32320709, 0.86297216, 1.07987819, -3.14136062, 1.05748596, -0.86970543, -1.48018799]])
  b4 = np.array([[-1.22287649]])
  W = [W1,W2,W3,W4]
  b = [b1,b2,b3,b4]

  mu = np.array([5.11904762, 4.0, 380.49702381])
  sigma = np.array([3.28924931, 0.80178373, 189.59231838])
  x = (x-mu)/sigma
  prediction = predict(x,W,b)
  return prediction.item()

def predictPink(x):
  W1 = np.array([
    [0.54734884, -0.17770221, 1.6167974],
    [0.60116423, 0.36885418, -0.35001994],
    [1.11751728, 1.84344491, -0.45955199],
    [0.41093117, -0.75331759, 1.54629574],
    [-1.59228841, 0.80652504, -0.56915547],
    [1.02915112, 0.97580032, -0.25190349],
    [-1.15370786, -0.23703173, 1.09385253],
    [1.49333754, 1.43362632, -0.38577014],
    [1.30457887, 1.61343395, -1.52693317],
    [0.69891492, 1.56648405, 0.01860592]
  ])
  b1 = np.array([
    [0.67696786],
    [0.3395274],
    [-0.76832297],
    [0.07530143],
    [1.07508753],
    [-0.12450576],
    [-0.61718044],
    [-0.18556261],
    [0.36338421],
    [-0.45618165],
  ])
  W2 = np.array([
    [-3.81748544e-01, 2.79184584e-01, 5.34268292e-01, 4.86346054e-02, 1.46255671e-01, 1.21300587e-01, 1.65928550e-01, 3.32085106e-01, 1.86599456e-01, 3.81591840e-01],
    [1.10759184e+00, 2.31576332e-01, -5.05441633e-01, 1.34112560e+00, -6.62994361e-01, 2.80049194e-01, 1.39028296e+00, 2.35923088e-01, -4.50586605e-01, -2.53187569e-01],
    [-6.22557382e-01, 5.25311096e-01, 4.72431043e-01, -2.00557273e-01, 2.79917605e-01, 1.30044808e-01, 7.81107128e-02, 2.32370416e-01, 7.15311194e-01, 6.54225085e-01],
    [-9.02050387e-01, 5.03827171e-01, 8.14430638e-01, -4.19063890e-01, 4.07677672e-01, 3.57212756e-01, 5.52705046e-02, 4.25925744e-01, 1.09527364e+00, 7.31442735e-01],
    [3.33302117e-01, 5.21072274e-02, -6.45699906e-02, 3.89376289e-01, 1.50429266e-01, 4.72849762e-02, 5.41142909e-01, 1.89140307e-01, 2.48385002e-01, 2.45772093e-01],
    [-3.69678139e-01, 3.89674667e-01, 5.50440249e-01, -2.52168935e-01, 2.37645149e-01, 4.20778002e-01, -3.15897781e-02, 4.67995129e-01, 5.39128525e-01, 4.23265132e-01],
    [2.01013295e-01, 3.76408328e-01, 2.57285908e-02, 4.82020827e-01, -1.54251265e-01, 7.58049157e-02, 5.91154811e-01, 1.98229034e-01, -1.84424246e-01, 1.54966450e-01],
    [-4.02407064e-01, 3.26116080e-01, 6.02588170e-01, -9.48859842e-02, 2.32663370e-01, 2.44388914e-01, -1.73348487e-01, 2.98985120e-01, 5.17509253e-01, 5.79416720e-01],
    [-5.39985015e-01, 1.52796677e-01, 5.91896880e-01, -4.16986304e-04, 2.15817908e-01, 3.41517035e-01, 2.18526876e-01, 4.10187505e-01, 4.98584388e-01, 2.02687601e-01],
    [8.31853638e-02, -4.87956953e-02, 7.98692101e-01, -9.10707343e-02, 8.49654042e-01, 8.82772758e-01, -5.08039963e-01, 1.35485053e+00, 4.66846525e-01, 6.28866690e-01]
  ])
  b2 = np.array([
    [-0.32001949],
    [-0.18505128],
    [-0.72244209],
    [-0.81559818],
    [-0.11865139],
    [-0.63322077],
    [-0.18295863],
    [-0.59794507],
    [-0.41403142],
    [-2.29533874]
  ])
  W3 = np.array([
    [1.94314266e-01, 8.43543794e-01, 1.06768149e-01, -1.94058197e-01, 4.92095353e-01, 1.37775176e-02, 4.88168195e-01, 7.67922731e-03, 3.43858429e-01, -4.67820159e-02],
    [2.13946929e-01, 4.13052152e-01, -6.54280239e-02, -9.97284302e-02, 1.81239542e-01, -1.90235350e-02, 1.98391664e-01, 2.06221137e-01, 2.02871556e-01, -2.96415448e-01],
    [-3.67539055e-02, 8.28072525e-01, 1.18671744e-01, -1.28282342e-01, 2.57095068e-01, 2.16740731e-01, 1.93114444e-01, 9.03024918e-02, 3.52712994e-01, 6.55388710e-03],
    [1.97483008e-01, -2.46948520e-01, 5.12949979e-01, 6.91603211e-01, 8.54624959e-04, 1.64704182e-01, -7.31003460e-02, 3.90566218e-01, 4.00795425e-01, 8.27080775e-01],
    [8.92691631e-02, 1.09375307e+00, 8.48325452e-02, -1.05636367e-01, 4.95044402e-01, 2.31945895e-01, 5.01279508e-01, -7.24561855e-02, -1.86941709e-02, -3.85926016e-01],
    [3.23006200e-01, -2.97954970e-01, 5.26829624e-01, 3.33811955e-01, -8.83896480e-02, 4.42041878e-01, -6.79404044e-02, 4.07652299e-01, 3.05180864e-01, 8.32204928e-01],
    [4.13933387e-01, -1.19600196e+00, 1.00657192e+00, 1.31828012e+00, 1.33305427e-01, 9.13529180e-01, -2.85419802e-01, 6.82416641e-01, 6.66120870e-01, 2.04056249e+00],
    [4.55218079e-01, -2.56976770e-01, 6.48236064e-01, 6.52838996e-01, -1.04866008e-01, 3.37061768e-01, 8.13817402e-02, 3.89632832e-01, 5.23813130e-01, 9.40241769e-01],
    [1.21054020e-01, 7.82621890e-01, -4.62275535e-02, -1.17067211e-01, 1.91504267e-01, 1.42880235e-01, 1.20179245e-01, 2.76011844e-01, 3.30282086e-01, -3.12760748e-01],
    [1.12585538e-01, -2.37621208e-01, 2.48887302e-01, 6.28073566e-01, -5.81311397e-02, 4.85701656e-01, 1.05964859e-01, 5.05323358e-01, 4.23747161e-01, 8.11277322e-01]
  ])
  b3 = np.array([
    [-0.28681942],
    [-0.13327294],
    [-0.27815701],
    [-0.3113125],
    [-0.24508889],
    [-0.18005615],
    [-0.6217168],
    [-0.31594471],
    [-0.24233184],
    [-0.27093274]
  ])
  W4 = np.array([[0.81555786, 0.53983857, 0.65511757, -1.19035916, 1.17363729, -1.05481792, -3.03059397, -1.26127907, 0.69758842, -1.05634001]])
  b4 = np.array([[1.8383483]])
  W = [W1,W2,W3,W4]
  b = [b1,b2,b3,b4]

  mu = np.array([6.76190476, 4.01190476, 429.26678571])
  sigma = np.array([3.25363916, 0.7942359, 234.73931268])
  x = (x-mu)/sigma
  prediction = predict(x,W,b)
  return prediction.item()